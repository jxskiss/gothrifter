{{/* .Type (Category = parser.TypeContainer) */}}

vt, size, err := r.ReadSetBegin()
if err != nil {
    return err
}
if vt != thrift.{{ .ValueType.TType }} {
    return thrift.ErrFieldType
}
if size > MaxSetElements {
    return thrift.ErrMaxSetElements
}
m := make({{ formatType . }}, size)
for i := 0; i < size; i++ {
    var e {{ formatType .ValueType }}
    {
        {{ formatRead .ValueType "e" }}
    }
    m[e] = true
}
// if err = r.ReadSetEnd(); err != nil {
//     return err
// }
